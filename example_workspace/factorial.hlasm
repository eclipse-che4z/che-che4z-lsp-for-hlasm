***************************  FACTORIAL  ******************************
* The following recursive macro computes factorial of its parameter
* during compile time. The result will be in variable symbol RES.
           MACRO
           FACT &A
        
           GBLA RES We create global variable symbol RES
* It is created with default value 0, so initialize it to 1 if this is
* the topmost call of this macro.
           AIF (&SYSNEST NE 1).INITEND
&RES       SETA 1
.INITEND   AIF (&A EQ 0).SKIP   Nothing to do if computing fact of 0.
&RES       SETA &RES*&A         Do the actual multiplication
* The 'NEXT' variable is local to the scope of current macro execution.
&NEXT      SETA &A-1            
           FACT &NEXT           Do the factorial of a-1
.SKIP      ANOP
           MEND
    
           GBLA RES  We have to unhide the global variable RES,        X
                     otherwise, it would not be visible to this scope.
           FACT 5    Now we 'call' the macro, and it will assign 5! to X
                     &RES

* We can now hover over the FACTLEN symbol to see that its length is
* indeed 120.
LEN120     DS CL(&RES)

* Unfortunately the macro cannot compute factorial of numbers greater
* than 12 because it does not fit into 32 bit variable.
           FACT 6
LEN720     DS CL(&RES)
            AIF ('&SYSPARM' EQ 'SEVEN').HERE
            ANOP
.HERE      FACT 7             
