{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "IBM HLASM",
  "patterns": [
    {
      "include": "#hlasm_syntax"
    }
  ],
  "repository": {
    "hlasm_syntax": {
      "patterns": [
        {
          "include": "#lineTooLong"
        },
        {
          "include": "#lineComment"
        },
        {
          "include": "#parseLine"
        },
        {
          "include": "#asmArgumentLine"
        },
        {
          "include": "#asmLineStart"
        }
      ]
    },
    "additionalAsmHighlight": {
      "patterns": [
        {
          "include": "#labels"
        },
        {
          "include": "#asmSpecialStatements"
        },
        {
          "include": "#operators"
        },
        {
          "include": "#numbers"
        }
      ]
    },
    "lineTooLong": {
      "patterns": [
        {
          "name": "invalid.illegal.hlasm",
          "match": "^.{81,}"
        }
      ]
    },
    "lineComment": {
      "patterns": [
        {
          "name": "comment.hlasm",
          "match": "^(\\*.{70,70})(.*)",
          "captures": {
            "1": {
              "name": "comment.hlasm"
            },
            "2": {
              "patterns": [
                {
                  "match": "\\s(.{0,8})",
                  "captures": {
                    "1": {
                      "patterns": [
                        {
                          "include": "#sequenceNumbers"
                        }
                      ]
                    }
                  }
                },
                {
                  "match": "([^\\s])(.{0,8})",
                  "captures": {
                    "1": {
                      "name": "invalid.illegal.hlasm"
                    },
                    "2": {
                      "patterns": [
                        {
                          "include": "#sequenceNumbers"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        },
        {
          "name": "comment.hlasm",
          "match": "\\*.*"
        },
        {
          "name": "comment.hlasm",
          "match": "\\.\\*.*"
        }
      ]
    },
    "parseLine": {
      "patterns": [
        {
          "match": "^(.{71,71})([^\\s])(.{0,8})",
          "captures": {
            "1": {
              "patterns": [
                {
                  "include": "#asmArgumentLine"
                },
                {
                  "include": "#asmLineStart"
                }
              ]
            },
            "2": {
              "name": "keyword.other.hlasm"
            },
            "3": {
              "patterns": [
                {
                  "include": "#sequenceNumbers"
                }
              ]
            },
            "5": {
              "patterns": [
                {
                  "match": "\\S.*",
                  "name": "invalid.illegal"
                }
              ]
            }
          }
        },
        {
          "match": "^(.{71,71})(\\s?)(.{0,8})$",
          "captures": {
            "1": {
              "patterns": [
                {
                  "include": "#asmArgumentLine"
                },
                {
                  "include": "#asmLineStart"
                }
              ]
            },
            "3": {
              "patterns": [
                {
                  "include": "#sequenceNumbers"
                }
              ]
            }
          }
        }
      ]
    },
    "asmLineStart": {
      "patterns": [
        {
          "match": "^([^*]\\S*)?\\s+(.*)$",
          "captures": {
            "1": {
              "name": "support.class.hlasm"
            },
            "2": {
              "patterns": [
                {
                  "include": "#asmInstruction"
                }
              ]
            }
          }
        }
      ]
    },
    "asmInstruction": {
      "patterns": [
        {
          "match": "(\\S+)\\s*(.*)",
          "captures": {
            "1": {
              "name": "entity.name.function.hlasm"
            },
            "2": {
              "patterns": [
                {
                  "include": "#asmArguments"
                }
              ]
            }
          }
        }
      ]
    },
    "asmArgumentLine": {
      "patterns": [
        {
          "match": "^\\s+(\\S+=.*)$",
          "captures": {
            "1": {
              "patterns": [
                {
                  "include": "#asmArguments"
                }
              ]
            }
          }
        }
      ]
    },
    "asmArguments": {
      "patterns": [
        {
          "include": "#stringType"
        },
        {
          "include": "#quoteType"
        },
        {
          "match": "(\\S*)(.*)",
          "captures": {
            "1": {
              "name": "punctuation.definition.tag.hlasm",
              "patterns": [
                {
                  "include": "#additionalAsmHighlight"
                }
              ]
            },
            "2": {
              "name": "comment.hlasm"
            }
          }
        },
        {
          "match": "\\s.*",
          "name": "comment.hlasm"
        }
      ]
    },
    "stringType": {
      "patterns": [
        {
          "match": "(\\S*?)('.*?')(.*)",
          "captures": {
            "1": {
              "name": "punctuation.definition.tag.hlasm",
              "patterns": [
                {
                  "include": "#additionalAsmHighlight"
                }
              ]
            },
            "2": {
              "name": "string.hlasm"
            },
            "3": {
              "patterns": [
                {
                  "include": "#asmArguments"
                }
              ]
            }
          }
        }
      ]
    },
    "quoteType": {
      "patterns": [
        {
          "match": "(\\S*?)([LKNT]')(.*)",
          "captures": {
            "1": {
              "name": "keyword.control.hlasm",
              "patterns": [
                {
                  "include": "#additionalAsmHighlight"
                }
              ]
            },
            "2": {
              "name": "support.type.hlasm"
            },
            "3": {
              "patterns": [
                {
                  "include": "#asmArguments"
                }
              ]
            }
          }
        }
      ]
    },
    "labels": {
      "match": "[*]",
      "name": "support.class.hlasm"
    },
    "operators": {
      "match": "[=(),+]",
      "name": "keyword.operator.hlasm"
    },
    "numbers": {
      "match": "(?<=[=(),*\\s+])-?\\d*(?=[=(),*+\\s]|$)",
      "name": "constant.numeric.hlasm"
    },
    "asmSpecialStatements": {
      "match": "(?<=[=(),*+\\s])=?\\d*(A|B|C|D|E|F|G|H|P|V|X|Z)(L\\d*)?(?=[=(),*\\s+]|$)",
      "name": "support.type.hlasm"
    },
    "sequenceNumbers": {
      "name": "constant.numeric.hlasm",
      "match": ".*"
    }
  },
  "scopeName": "source.hlasm"
}