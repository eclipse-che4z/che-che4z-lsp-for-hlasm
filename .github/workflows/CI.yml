#
# Copyright (c) 2019 Broadcom.
# The term "Broadcom" refers to Broadcom Inc. and/or its subsidiaries.
#
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#   Broadcom, Inc. - initial API and implementation
#

name: CI
on:
  push:
    branches:
      - master
      - development
  pull_request:
    branches:
      - master
      - development

jobs:
  
  win-server:
    name: Windows language server
    runs-on: windows-2019
    
    steps:
    - uses: actions/checkout@v1
    - name: Install ninja-build tool
      uses: seanmiddleditch/gha-setup-ninja@v1
    - name: Configure
      shell: cmd
      run: mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release ../
    - name: Build
      shell: cmd
      run: cd build && cmake --build . --parallel --config Release
    - name: Server Test
      shell: cmd
      run: cd build\bin && library_test.exe && server_test.exe
    - name: Extension Test
      shell: cmd
      run: npm --prefix .\clients\vscode-hlasmplugin run test
    - name: Extension Test Insiders
      shell: cmd
      run: npm --prefix .\clients\vscode-hlasmplugin run test:insiders
    - name: Actions artifact
      uses: actions/upload-artifact@v1
      with:
        name: language_server_win
        path: build/bin/language_server.exe

  linux-server:
      name: Linux language server
      runs-on: ubuntu-18.04
      
      steps:
      - uses: actions/checkout@v1
      - name: Requirements install
        run: sudo apt-get update && sudo apt-get install uuid-dev g++-8 ninja-build
      - name: Configure
        run: mkdir build && cd build && cmake -G Ninja -DCMAKE_C_COMPILER=gcc-8 -DCMAKE_CXX_COMPILER=g++-8 ../
      - name: Build
        run: cd build && cmake --build .
      - name: Server Test
        run: cd build/bin && ./server_test && ./library_test
      - name: Extension Test
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: npm --prefix clients/vscode-hlasmplugin run test
      - name: Extension Test Insiders
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: npm --prefix clients/vscode-hlasmplugin run test:insiders
      - name: Actions artifact
        uses: actions/upload-artifact@v1
        with:
          name: language_server_linux
          path: build/bin/language_server
  
  macos-server:
      name: MacOS language server
      runs-on: macos-10.15
      
      steps:
      - uses: actions/checkout@v1
      - name: Requirements install
        run: |
          brew install ninja llvm@8
          export PATH=~/usr/local/opt/llvm\@8/bin:$PATH
      - name: Configure
        run: mkdir build && cd build && cmake -G Ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DLLVM_PATH=/usr/local/opt/llvm\@8 ../
      - name: Build
        run: cd build && cmake --build . -- -v
      - name: Server Test
        run: cd build/bin && ./server_test && ./library_test
      - name: Extension Test
        run: npm --prefix clients/vscode-hlasmplugin run test
      - name: Extension Test Insiders
        run: npm --prefix clients/vscode-hlasmplugin run test:insiders
      - name: Actions artifact
        uses: actions/upload-artifact@v1
        with:
          name: language_server_macos
          path: build/bin/language_server
    
  VSIX:
    runs-on: ubuntu-18.04
    needs: [win-server, linux-server, macos-server]
    
    steps:
      - uses: actions/checkout@v1
      - name: Download windows language server
        uses: actions/download-artifact@v1
        with:
          name: language_server_win
          path: clients/vscode-hlasmplugin/bin/win32/
      - name: Download linux language server
        uses: actions/download-artifact@v1
        with:
          name: language_server_linux
          path: clients/vscode-hlasmplugin/bin/linux/
      - name: Download MacOS language server
        uses: actions/download-artifact@v1
        with:
          name: language_server_macos
          path: clients/vscode-hlasmplugin/bin/darwin/
      - name: Set executable flag
        run: |
          chmod +x clients/vscode-hlasmplugin/bin/darwin/language_server
          chmod +x clients/vscode-hlasmplugin/bin/linux/language_server
      - name: Package VSIX
        run: cd clients/vscode-hlasmplugin/ && npm ci && npm run package
      - name: Get VSIX filename
        run: echo ::set-env name=VSIX_FILENAME::$(ls clients/vscode-hlasmplugin/*.vsix)
      - name: Get version
        run: echo ::set-env name=VERSION::$(node -e "console.log(require('./clients/vscode-hlasmplugin/package.json').version)") 
      - name: Upload VSIX
        uses: actions/upload-artifact@v1
        with:
          name: hlasm-language-support-${{ env.VERSION }}.vsix
          path: ${{ env.VSIX_FILENAME }}
        
  alpine-VSIX:
      name: Alpine VSIX
      runs-on: ubuntu-18.04
      container:
        image: alpine:3.10
      
      steps:
      - uses: actions/checkout@v1
      - name: Requirements install
        run: apk update && apk add --no-cache linux-headers git g++ cmake util-linux-dev npm ninja pkgconfig openjdk8 maven
      - name: Configure
        run: mkdir build && cd build && cmake -G Ninja ../
      - name: Build
        run: cd build && cmake --build .
      - name: Server Test
        run: cd build/bin && ./server_test && ./library_test
      - name: Get VSIX filename
        run: echo ::set-env name=VSIX_FILENAME::$(ls build/bin/*.vsix)
      - name: Get version
        run: echo ::set-env name=VERSION::$(node -e "console.log(require('./clients/vscode-hlasmplugin/package.json').version)") 
      - name: Rename VSIX
        run: mv ${{ env.VSIX_FILENAME }} hlasm-language-support-alpine-${{ env.VERSION }}.vsix
      - name: Upload VSIX
        uses: actions/upload-artifact@v1
        with:
          name: hlasm-language-support-alpine-${{ env.VERSION }}.vsix
          path: hlasm-language-support-alpine-${{ env.VERSION }}.vsix

  theia-test:
      name: Theia Integration Test
      runs-on: ubuntu-18.04
      needs: alpine-VSIX
      strategy:
        matrix: 
          theia: ['theiaide/theia', 'theiaide/theia:next']
      container:
        image: ${{ matrix.theia }}
        options: --user root
      
      steps:
      - uses: actions/checkout@v1
      - name: Install Chromium
        run: apk add --no-cache chromium
      - name: Get version
        run: echo ::set-env name=VERSION::$(node -e "console.log(require('./clients/vscode-hlasmplugin/package.json').version)")
      - name: Download VSIX
        uses: actions/download-artifact@v2
        with:
          name: hlasm-language-support-alpine-${{ env.VERSION }}.vsix
          path: clients/vscode-hlasmplugin/plugin/
      - name: Run Tests
        run: cd clients/vscode-hlasmplugin && npm install && npm run compile && node ./build/bin/theiaTest.js /home/theia/
