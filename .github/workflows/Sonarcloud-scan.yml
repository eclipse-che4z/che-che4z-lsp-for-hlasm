#
# Copyright (c) 2019 Broadcom.
# The term "Broadcom" refers to Broadcom Inc. and/or its subsidiaries.
#
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#   Broadcom, Inc. - initial API and implementation
#

name: SonarCloud scan

on:
  workflow_run:
    workflows: ["SonarCloud build"]
    types:
      - completed

jobs:
  sonar:
    name: SonarCloud scan
    runs-on: ubuntu-20.04
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: 'Download build output'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "bw-output"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/bw-artifact.zip', Buffer.from(download.data));
      - run: unzip bw-artifact.zip
      - name: Get ref
        run: echo "REF=$(cat pr-info/ref.txt)" >> $GITHUB_ENV
      - run: mv bw-artifact.zip /tmp/bw-artifact.zip
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ env.REF }}
      - run: mv /tmp/bw-artifact.zip bw-artifact.zip
      - run: unzip bw-artifact.zip
      - name: Get version
        run: echo "VERSION=$(node -e "console.log(require('./clients/vscode-hlasmplugin/package.json').version)")" >> $GITHUB_ENV

      - name: Sonar scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >
          export SONAR_SCANNER_VERSION=4.2.0.1873 &&
          export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux &&
          rm -rf $SONAR_SCANNER_HOME &&
          mkdir -p $SONAR_SCANNER_HOME &&
          curl -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip &&
          unzip $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/ &&
          rm $HOME/.sonar/sonar-scanner.zip &&
          export PATH=$SONAR_SCANNER_HOME/bin:$PATH &&
          export SONAR_SCANNER_OPTS="-server" &&
          sonar-scanner
          -Dsonar.projectKey=eclipse_che-che4z-lsp-for-hlasm
          -Dsonar.organization=eclipse
          -Dsonar.sources=benchmark,clients/vscode-hlasmplugin/src/,language_server/src,parser_library/src,parser_library/include,build/generated_parser/
          -Dsonar.tests=parser_library/test,language_server/test,clients/vscode-hlasmplugin/src/test
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          -Dsonar.cfamily.build-wrapper-output=build/bw-output
          -Dsonar.cfamily.threads=4
          -Dsonar.cfamily.llvm-cov.reportPath=build/coverage.txt
          -Dsonar.cfamily.cache.enabled=false
          -Dsonar.javascript.lcov.reportPaths=clients/vscode-hlasmplugin/coverage/lcov.info
          -Dsonar.projectVersion=${{ env.VERSION }}
          -Dsonar.cpd.exclusions=parser_library/src/context/instruction.cpp
          -Dsonar.exclusions=clients/vscode-hlasmplugin/src/test/**
          -Dsonar.test.inclusions=clients/vscode-hlasmplugin/src/test/**
          -Dsonar.coverage.exclusions=benchmark/benchmark.cpp
          $(cat pr-info/head-branch-arg.txt)
          $(cat pr-info/pr-number-arg.txt)
